{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RegisterUploadPage","alert","useAlert","useState","files","setFiles","undefined","imageSrc","setImageSrc","onDelete","id","filter","x","handleSee","imageSource","style","margin","padding","width","height","background","overflowY","marginTop","backgroundColor","marginLeft","border","borderRadius","transform","display","type","onClick","username","document","getElementById","value","password","confirm_password","info","textTransform","color","myHeaders","Headers","fetch","method","headers","body","redirect","mode","then","response","console","log","json","result","success","error","message","catch","minWidth","onChange","incommingFiles","maxFiles","accept","url","map","file","key","onSee","preview","hd","imgSource","openImage","onClose","e","marginBottom","textAlign","app","template","AlertTemplate","position","positions","TOP_CENTER","transition","transitions","FADE","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App"],"mappings":"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","file":"static/js/main.a5b75be1.chunk.js","sourcesContent":["import { Dropzone, FileItem, FullScreenPreview } from \"@dropzone-ui/react\";\nimport { useState } from \"react\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { useAlert } from \"react-alert\";\n\nconst RegisterUploadPage = () => {\n  const alert = useAlert();\n  function regist() {\n    // get user entered values\n    const username = document.getElementById(\"username\").value\n    const password = document.getElementById(\"password\").value\n    const confirm_password = document.getElementById(\"confirm-password\").value\n    // check values' vadality\n    if (username === '' || password === '' || confirm_password === '') {\n      alert.info(<p style={{ textTransform: 'initial' }}>Plz fill-in <text style={{color:\"yellow\"}}>all</text> fields.</p>)\n      return null\n    }\n    if (password !== confirm_password) {\n      alert.info(<p style={{ textTransform: 'initial' }}>Password and Confirm Password <text style={{color:\"red\"}}>not</text> the same.</p>)\n      return null\n    }\n\n    var myHeaders = new Headers();\n    \n    var raw = \"\";\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode:'cors'\n    };\n    fetch(\"http://35.238.183.90:8000/register?username=\"+username+\"&password=\"+password+\"&confirmpw=\"+confirm_password, requestOptions)\n      .then(response => {\n        console.log(response)\n        return response.json()\n      })\n      .then(result => {\n        console.log(result)\n        // register success/fail\n        if (result.success) {\n          alert.success(\n          <div style={{color:'#90ee90'}}>\n            <p>Success!</p>\n            <small>Go to next step.</small>\n          </div>)\n        } else {\n          alert.error(\n            <div>\n              <p style={{color:'red'}}>{result.message}</p>\n            </div>\n            )\n        }\n      })\n      .catch(error => {\n        alert.error(\n          <div>\n            <p style={{color:'red'}}>{error.message}</p>\n          </div>\n        )\n      });\n  }\n\n  const [files, setFiles] = useState([]);\n  const [imageSrc, setImageSrc] = useState(undefined);\n  const updateFiles = (incommingFiles) => {\n    console.log(\"incomming files\", incommingFiles);\n    setFiles(incommingFiles);\n  };\n  const onDelete = (id) => {\n    setFiles(files.filter((x) => x.id !== id));\n  };\n  const handleSee = (imageSource) => {\n    setImageSrc(imageSource);\n  };\n\n  return (\n  <div style={{margin:0, padding:0}}>\n    <div style={{width:\"100%\", height:\"fit-content\", background: `linear-gradient(#36d1dc, #5b86e5)`, overflowY:\"scroll\"}} id=\"register-load-container\">\n      <div style={{width:\"100%\"}} id=\"register-container\">\n        {/* register */}\n        <div style={{marginTop:\"10%\", backgroundColor:\"white\",width:\"12%\", marginLeft:\"44%\",height:\"fit-content\",border: '5px solid white', borderRadius:5, transform: `scale(1.2)`}}>\n          <div id=\"user-form\" style={{border: '5px solid white'}}>\n            <text>Register</text>\n            <hr/>\n            <label style={{marginTop:\"1%\", display:\"inline-block\"}}>Username</label>\n            <br></br>\n            <input type=\"text\" id=\"username\" style={{border: '1px solid grey', borderRadius:5, width:\"100%\"}}></input>\n            <br></br>\n            <label style={{marginTop:\"1%\", display:\"inline-block\"}}>Password</label>\n            <br></br>\n            <input type=\"password\" id=\"password\" style={{border: '1px solid grey', borderRadius:5, width:\"100%\"}}></input>\n            <br></br>\n            <label style={{marginTop:\"1%\", display:\"inline-block\"}}>Confirm Password</label>\n            <br></br>\n            <input type=\"password\" id=\"confirm-password\" style={{border: '1px solid grey', borderRadius:5, width:\"100%\"}}></input>\n            <br></br>\n            <input type=\"submit\" id=\"regist\" onClick={regist} style={{width:\"100%\", border: '1px solid grey', borderRadius:5, backgroundColor:\"#007bff\", color:\"white\", marginTop:\"1%\", display:\"inline-block\"}}></input>\n          </div>\n        </div>\n      </div>\n      <div style={{width:\"100%\"}} id=\"load-container\">\n        {/* uploader */}\n        <Dropzone\n          style={{ minWidth: \"550px\", width: \"50%\", marginLeft:\"25%\", marginTop:\"10%\"}}\n          //view={\"list\"}\n          onChange={updateFiles}\n          value={files}\n          maxFiles={30}\n          //header={false}\n          // footer={false}\n          // maxFileSize={2998000}\n          //label=\"Drag'n drop files here or click to browse\"\n          //label=\"Suleta tus archivos aquÃ­\"\n          accept=\".png,image/*\"\n          // uploadingMessage={\"Uploading...\"}\n          url=\"http://35.238.183.90:2000/api/upload-file\"\n          // url to storage location\n          //uploadOnDrop\n          //clickable={false}\n          // fakeUploading\n          //localization={\"FR-fr\"}\n        >\n          {files.map((file) => (\n            <FileItem\n              {...file}\n              key={file.id}\n              onDelete={onDelete}\n              onSee={handleSee}\n              //localization={\"FR-fr\"}\n              //localization={\"ES-es\"}\n              preview\n              info\n              hd\n            />\n          ))}\n          <FullScreenPreview\n            imgSource={imageSrc}\n            openImage={imageSrc}\n            onClose={(e) => handleSee(undefined)}\n          />\n        </Dropzone>\n      </div>\n      <br></br>\n      <div style={{width:\"100%\", marginTop:\"10%\", marginBottom:\"5%\", textAlign:\"center\", display:\"inline-block\"}}>End of page.</div>\n    </div>\n  </div>\n  );\n}\n\nconst app = () => (\n  <Provider template={AlertTemplate}>\n    <Provider\n      template={AlertTemplate}\n      position={positions.TOP_CENTER}\n      transition={transitions.FADE}\n      timeout={3000}\n    >\n      <RegisterUploadPage />\n    </Provider>\n  </Provider>\n)\n\nexport default app;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}